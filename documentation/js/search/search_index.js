var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.227,1,2.19]],["body/controllers/AppController.html",[0,1.88,1,3.356,2,1.463,3,0.31,4,0.269,5,0.269,6,3.331,7,0.537,8,1.749,9,4.992,10,1.463,11,0.028,12,2.612,13,3.356,14,4.281,15,4.281,16,5.084,17,0.697,18,3.956,19,1.267,20,1.22,21,0.562,22,0.817,23,3.04,24,2.366,25,1.267,26,3.069,27,3.331,28,3.956,29,0.31,30,0.123,31,1.697,32,1.574,33,2.366,34,1.361,35,3.956,36,0.021,37,0.021]],["title/modules/AppModule.html",[38,1.141,39,2.19]],["body/modules/AppModule.html",[1,3.372,2,1.656,3,0.256,4,0.222,5,0.222,11,0.028,21,0.62,22,0.675,26,3.248,27,2.752,29,0.256,30,0.102,36,0.018,37,0.018,38,1.541,39,4.373,40,1.402,41,1.921,42,2.752,43,2.752,44,2.752,45,3.556,46,3.556,47,2.55,48,3.556,49,3.556,50,2.248,51,1.641,52,1.641,53,3.269,54,2.447,55,2.678,56,3.269,57,3.269,58,3.269,59,3.269,60,3.269,61,3.269]],["title/injectables/AppService.html",[26,1.813,62,0.921]],["body/injectables/AppService.html",[3,0.321,4,0.279,5,0.279,7,0.557,8,1.789,9,4.379,11,0.028,14,4.379,17,0.723,19,1.313,20,1.487,21,0.41,22,0.846,26,2.842,29,0.321,30,0.128,34,1.411,36,0.021,37,0.021,62,1.443,63,1.9,64,3.452,65,5.201,66,4.1,67,1.411,68,0.984,69,0.61,70,1.138,71,5.201,72,5.201,73,3.452,74,4.1,75,4.1]],["title/controllers/AuthController.html",[0,1.227,76,2.19]],["body/controllers/AuthController.html",[0,1.071,2,1.071,3,0.227,4,0.197,5,0.197,7,0.393,8,1.416,10,1.522,11,0.028,17,0.725,19,1.318,21,0.602,22,0.598,23,2.863,24,1.732,25,0.927,29,0.227,30,0.09,31,1.242,32,1.152,33,2.461,34,1.416,36,0.017,37,0.017,67,1.416,68,0.987,69,0.612,70,1.142,76,2.717,77,2.438,78,1.911,79,2.896,80,3.441,81,4.116,82,2.438,83,3.422,84,2.896,85,4.116,86,4.116,87,2.717,88,3.037,89,2.717,90,4.116,91,2.896,92,2.717,93,2.896,94,1.926,95,2.896,96,4.116,97,2.461,98,2.248,99,3.037,100,2.896,101,2.896,102,1.911,103,2.137,104,2.137,105,2.717,106,1.911,107,1.911,108,1.152,109,2.717,110,1.911,111,2.616,112,2.438,113,1.732,114,2.438,115,2.438,116,2.438,117,1.911,118,2.896,119,2.438,120,2.896,121,2.896,122,2.896,123,2.896,124,2.896,125,1.911,126,2.896,127,2.896]],["title/modules/AuthModule.html",[38,1.141,45,1.984]],["body/modules/AuthModule.html",[2,1.709,3,0.268,4,0.233,5,0.233,11,0.028,21,0.617,22,0.707,29,0.268,30,0.107,36,0.019,37,0.019,38,1.59,40,1.468,41,1.982,45,3.839,47,2.586,50,2.32,51,1.718,52,1.718,54,2.525,55,2.764,76,3.454,108,1.362,111,3.293,112,2.882,128,2.882,129,2.882,130,3.423,131,3.605,132,3.423,133,3.423,134,2.259,135,3.423,136,2.526,137,2.259,138,3.423,139,2.259,140,2.259,141,1.718,142,3.423,143,3.423,144,2.882,145,3.423,146,3.423,147,3.423]],["title/injectables/AuthService.html",[62,0.921,111,1.813]],["body/injectables/AuthService.html",[3,0.223,4,0.194,5,0.194,7,0.387,8,1.399,11,0.028,17,0.716,19,0.912,21,0.569,22,0.588,29,0.223,30,0.089,32,1.618,34,0.979,36,0.017,37,0.017,62,1.128,63,1.319,67,1.399,68,0.975,69,0.605,70,1.128,80,2.684,82,3.423,83,3.403,88,2.101,92,2.684,94,1.657,97,2.432,111,2.221,113,1.703,114,2.397,115,2.397,116,2.397,136,2.101,148,2.397,149,2.591,150,2.432,151,1.703,152,2.059,153,5.858,154,2.847,155,2.041,156,2.847,157,2.397,158,3,159,1.703,160,3.423,161,2.591,162,2.597,163,1.555,164,2.847,165,2.847,166,2.847,167,4.066,168,2.397,169,2.847,170,2.221,171,2.101,172,2.684,173,2.221,174,4.066,175,4.066,176,3.5,177,4.066,178,2.847,179,2.847,180,2.847,181,4.066,182,2.847,183,3,184,1.429,185,2.847]],["title/classes/CreateOrderDto.html",[30,0.103,186,1.984]],["body/classes/CreateOrderDto.html",[3,0.252,4,0.219,5,0.219,7,0.437,10,1.638,11,0.027,17,0.781,21,0.546,25,1.03,29,0.252,30,0.158,36,0.018,37,0.018,69,0.88,97,2.649,186,2.649,187,1.107,188,3.738,189,2.708,190,1.524,191,3.03,192,3.738,193,3.779,194,3.217,195,3.217,196,4.43,197,3.268,198,2.924,199,4.43,200,4.43,201,3.73,202,5.459,203,4.43,204,4.028,205,2.708,206,3.217,207,2.924,208,2.708,209,4.43,210,3.268,211,3.268,212,4.43,213,2.42,214,3.73,215,3.217,216,2.768,217,2.708,218,3.73,219,3.73,220,2.708,221,4.43,222,1.757,223,1.28,224,1.757,225,2.123,226,1.638,227,3.217,228,2.374]],["title/classes/CreateOrderProductDto.html",[30,0.103,193,2.19]],["body/classes/CreateOrderProductDto.html",[3,0.253,4,0.22,5,0.22,7,0.438,10,1.877,11,0.027,17,0.894,20,1.311,21,0.444,25,1.033,29,0.253,30,0.138,36,0.018,37,0.018,69,0.755,89,2.93,187,1.11,188,4.033,190,1.527,192,3.745,193,2.93,204,3.276,207,2.93,208,2.717,213,3.236,214,3.738,216,2.986,218,3.738,219,3.738,220,3.738,222,1.763,224,2.986,226,2.19,229,2.13,230,4.273,231,2.381,232,4.439,233,4.033,234,3.738,235,4.439,236,3.227,237,3.227,238,1.767,239,4.439,240,4.439,241,4.439,242,4.439,243,4.439,244,2.717,245,4.439,246,4.439,247,2.717,248,2.93]],["title/classes/CreateProductDto.html",[30,0.103,249,1.813]],["body/classes/CreateProductDto.html",[3,0.246,4,0.213,5,0.213,7,0.426,10,1.997,11,0.027,17,0.952,20,1.409,21,0.436,25,1.005,29,0.246,30,0.136,36,0.018,37,0.018,68,1.199,69,0.803,187,1.079,190,1.498,207,2.874,210,3.985,213,3.354,216,3.1,222,1.714,226,2.227,229,2.071,231,3.212,233,3.212,244,2.642,247,2.642,248,3.3,249,2.379,250,4.777,251,2.51,252,3.3,253,4.354,254,4.354,255,4.354,256,2.642,257,3.666,258,4.354,259,3.137,260,3.666,261,4.354,262,3.137,263,3.137,264,4.354,265,4.354,266,3.137,267,4.354,268,3.666,269,3.137,270,3.137]],["title/classes/CreateUserDto.html",[30,0.103,271,1.813]],["body/classes/CreateUserDto.html",[3,0.2,4,0.173,5,0.173,7,0.346,10,1.936,11,0.027,15,3.158,17,0.922,20,1.447,21,0.375,25,0.816,29,0.2,30,0.117,36,0.015,37,0.015,68,1.068,69,0.778,80,3.242,89,3.242,98,3.174,162,2.235,163,2.432,176,4.287,187,0.876,190,1.29,213,3.294,216,2.991,222,1.392,226,1.936,231,2.767,234,4.135,248,3.242,251,2.235,256,2.145,257,3.158,260,4.135,268,3.158,271,2.049,272,4.61,273,1.879,274,4.452,275,2.145,276,3.751,277,4.911,278,4.911,279,3.751,280,3.624,281,2.547,282,3.751,283,3.158,284,2.547,285,3.751,286,3.751,287,3.158,288,3.158,289,2.547,290,3.751,291,3.751,292,3.158,293,2.547,294,2.547,295,3.751,296,3.751,297,3.751,298,3.751,299,2.547,300,2.547,301,2.547,302,2.547,303,2.547,304,2.547,305,2.547]],["title/injectables/JwtStrategy.html",[62,0.921,131,1.984]],["body/injectables/JwtStrategy.html",[3,0.254,4,0.22,5,0.22,7,0.44,8,1.531,11,0.028,17,0.784,19,1.037,20,0.777,21,0.548,22,0.668,29,0.254,30,0.101,31,1.389,32,1.288,34,1.114,36,0.018,37,0.018,62,1.234,63,1.5,67,1.531,68,1.067,69,0.814,70,1.234,94,1.628,98,1.769,99,2.389,108,1.288,131,2.661,141,1.625,144,2.726,149,2.777,150,1.936,151,1.936,152,2.178,155,2.234,157,3.746,159,1.936,161,1.769,162,2.234,168,2.726,170,1.769,171,2.389,172,2.137,173,1.769,183,2.389,184,1.625,211,2.389,306,2.726,307,4.449,308,3.237,309,4.449,310,4.449,311,3.237,312,3.237,313,3.237,314,3.237,315,3.237,316,3.237,317,2.726,318,2.137,319,3.237,320,3.237,321,3.237,322,3.237,323,3.237,324,2.726,325,3.237,326,3.237,327,3.283,328,3.237]],["title/classes/LoginDto.html",[30,0.103,83,1.984]],["body/classes/LoginDto.html",[3,0.297,4,0.258,5,0.258,7,0.515,10,1.83,11,0.027,17,0.872,20,1.4,21,0.495,25,1.215,29,0.297,30,0.154,36,0.02,37,0.02,69,0.736,83,2.959,98,3.188,162,3.039,163,3.008,176,3.651,187,1.305,190,1.702,213,3.188,216,3.008,222,2.073,226,1.83,248,3.635,280,3.651,329,3.194,330,4.948,331,4.948,332,3.794,333,3.794,334,5.506]],["title/classes/LoginResponseDto.html",[30,0.103,113,1.984]],["body/classes/LoginResponseDto.html",[3,0.298,4,0.259,5,0.259,7,0.517,10,1.834,11,0.027,17,0.874,20,1.19,21,0.496,25,1.219,29,0.298,30,0.119,36,0.02,37,0.02,69,0.737,80,3.274,88,4.07,94,1.989,98,2.71,99,3.66,110,2.514,113,2.966,141,2.49,187,1.31,190,1.706,213,2.71,216,3.014,226,1.834,275,4.176,335,4.644,336,3.206,337,4.96,338,3.274,339,4.96,340,3.808,341,4.96,342,3.808]],["title/classes/Order.html",[30,0.103,224,1.813]],["body/classes/Order.html",[3,0.294,4,0.255,5,0.255,7,0.509,11,0.027,17,1.063,20,1.178,21,0.491,29,0.294,30,0.117,36,0.02,37,0.02,69,0.897,70,1.811,94,1.981,110,2.477,187,1.291,190,1.69,191,3.275,224,2.683,238,2.179,343,3.159,344,3.615,345,3.615,346,4.287,347,3.752,348,3.752,349,2.537,350,3.752,351,3.752,352,3.752,353,3.752]],["title/controllers/OrderController.html",[0,1.227,354,2.19]],["body/controllers/OrderController.html",[0,1.019,2,1.019,3,0.216,4,0.187,5,0.187,7,0.374,8,1.366,10,1.722,11,0.028,12,1.818,13,2.621,17,0.82,19,1.491,20,1.117,21,0.58,22,0.569,23,3.047,24,1.647,25,0.882,29,0.216,30,0.086,31,1.181,32,1.096,33,2.784,34,1.602,36,0.016,37,0.016,67,1.366,68,0.953,69,0.59,70,1.102,78,1.818,87,3.364,94,1.802,102,2.621,105,2.621,106,1.818,107,1.818,108,1.096,109,2.621,110,1.818,117,1.818,119,2.319,125,1.818,186,3.55,198,2.621,204,3.76,223,1.58,224,1.505,238,2.028,338,2.621,354,2.621,355,2.319,356,2.784,357,2.169,358,2.754,359,2.032,360,2.93,361,2.754,362,2.93,363,2.93,364,3.971,365,2.754,366,1.505,367,2.032,368,2.754,369,2.032,370,2.032,371,1.505,372,2.319,373,2.544,374,2.319,375,2.754,376,2.754,377,2.754,378,2.754,379,2.754,380,2.032,381,2.032,382,2.754]],["title/modules/OrderModule.html",[38,1.141,46,1.984]],["body/modules/OrderModule.html",[2,1.83,3,0.297,4,0.258,5,0.258,11,0.028,21,0.606,22,0.783,29,0.297,30,0.118,36,0.02,37,0.02,38,1.702,40,1.627,41,2.122,46,3.833,47,2.662,50,2.484,51,1.905,52,1.905,54,2.703,55,2.959,108,1.51,134,2.504,137,2.504,139,2.504,140,2.504,141,1.905,354,3.635,373,3.391,374,3.194,383,3.194,384,3.794,385,3.194,386,3.794,387,3.794]],["title/injectables/OrderService.html",[62,0.921,373,1.813]],["body/injectables/OrderService.html",[3,0.183,4,0.159,5,0.159,7,0.317,8,1.208,11,0.028,17,0.828,19,1.352,20,1.271,21,0.505,22,0.481,29,0.183,30,0.073,31,1,32,0.928,34,1.453,36,0.014,37,0.014,62,0.974,63,1.08,67,1.453,68,1.358,69,0.628,70,1.172,94,1.505,150,1.394,151,1.394,152,1.871,155,2.12,159,1.394,161,1.273,186,3.289,191,2.811,192,2.59,223,1.681,226,1.562,228,4.576,230,1.962,238,2.109,251,1.17,252,1.539,349,1.627,356,2.568,357,1.918,366,1.918,371,1.273,372,1.962,373,1.918,388,1.962,389,2.331,390,3.511,391,2.331,392,3.511,393,2.331,394,2.331,395,1.72,396,1.394,397,1.394,398,1.72,399,3.116,400,2.331,401,2.331,402,2.331,403,2.331,404,2.331,405,2.331,406,2.331,407,2.331,408,4.968,409,1.72,410,2.331,411,2.331,412,2.331,413,2.331]],["title/modules/PrismaModule.html",[38,1.141,47,1.423]],["body/modules/PrismaModule.html",[3,0.325,4,0.282,5,0.282,11,0.027,21,0.524,22,0.857,29,0.325,30,0.129,36,0.021,37,0.021,38,1.803,40,1.78,41,2.248,47,2.768,50,2.632,51,2.084,52,2.084,54,2.864,152,2.671,414,3.495,415,3.495,416,3.495,417,4.151,418,5.242,419,4.151]],["title/injectables/PrismaService.html",[62,0.921,152,1.32]],["body/injectables/PrismaService.html",[3,0.295,4,0.256,5,0.256,7,0.511,8,1.694,11,0.028,17,0.868,19,1.577,21,0.493,22,0.777,29,0.295,30,0.117,36,0.02,37,0.02,62,1.366,63,1.745,67,1.295,68,0.903,69,0.56,70,1.045,149,3.447,152,1.959,170,2.69,318,3.25,395,2.779,420,3.171,421,4.619,422,4.924,423,6.194,424,4.924,425,5.819,426,3.766,427,3.171,428,3.766,429,3.766,430,3.766,431,3.766,432,3.766]],["title/classes/Product.html",[30,0.103,349,1.537]],["body/classes/Product.html",[3,0.29,4,0.251,5,0.251,7,0.502,11,0.027,17,1.107,20,1.529,29,0.29,30,0.115,36,0.02,37,0.02,68,1.304,69,0.934,70,1.71,187,1.272,190,1.674,207,3.211,226,2.011,238,2.164,251,2.73,252,3.589,344,3.589,345,3.589,346,4.263,349,2.254,433,3.113,434,3.697,435,3.697,436,3.697,437,3.697,438,3.697,439,3.697,440,3.697]],["title/controllers/ProductController.html",[0,1.227,441,2.19]],["body/controllers/ProductController.html",[0,0.843,2,0.843,3,0.178,4,0.155,5,0.155,7,0.309,8,1.187,10,1.846,11,0.028,12,1.504,13,2.278,17,0.88,19,1.599,20,1.381,21,0.526,22,0.47,23,3.142,24,1.363,25,0.73,29,0.178,30,0.071,31,0.977,32,0.907,33,2.986,34,1.599,36,0.014,37,0.014,67,1.599,68,1.115,69,0.691,70,1.289,78,1.504,87,3.71,102,2.278,103,1.681,104,1.681,105,2.278,106,1.504,107,1.504,108,0.907,109,2.278,125,1.504,184,2.091,198,2.278,201,2.906,223,1.373,225,2.278,233,4.147,238,2.405,249,2.87,338,3.468,349,1.056,356,2.539,357,1.885,359,1.681,360,2.546,362,2.546,363,2.546,366,1.245,367,1.681,369,1.681,371,1.245,380,1.681,381,1.681,441,2.278,442,1.918,443,2.064,444,2.278,445,2.278,446,1.504,447,1.918,448,2.906,449,2.278,450,1.918,451,2.278,452,2.278,453,1.504,454,3.361,455,1.918,456,2.906,457,2.278,458,1.918,459,2.276,460,1.918,461,1.504,462,2.278,463,2.278,464,1.918,465,2.278,466,2.278,467,2.278,468,1.918,469,1.918,470,2.278,471,1.918,472,1.918,473,1.918,474,2.278]],["title/modules/ProductModule.html",[38,1.141,48,1.984]],["body/modules/ProductModule.html",[2,1.83,3,0.297,4,0.258,5,0.258,11,0.028,21,0.606,22,0.783,29,0.297,30,0.118,36,0.02,37,0.02,38,1.702,40,1.627,41,2.122,47,2.662,48,3.833,50,2.484,51,1.905,52,1.905,54,2.703,55,2.959,108,1.51,134,2.504,137,2.504,139,2.504,140,2.504,141,1.905,441,3.635,459,3.391,460,3.194,475,3.194,476,3.194,477,3.794,478,3.794,479,3.794]],["title/injectables/ProductService.html",[62,0.921,459,1.813]],["body/injectables/ProductService.html",[3,0.175,4,0.152,5,0.152,7,0.303,8,1.169,11,0.028,17,0.955,19,1.669,20,1.443,21,0.522,22,0.461,29,0.175,30,0.07,31,0.958,32,0.889,34,1.702,36,0.014,37,0.014,62,0.943,63,1.035,67,1.793,68,1.251,69,0.775,70,1.446,92,3.852,97,1.336,149,3.287,150,1.336,151,1.336,152,1.83,155,1.707,159,1.336,161,2.248,170,2.513,172,1.474,173,1.22,184,1.707,197,1.648,223,1.353,225,2.244,238,2.277,249,2.513,327,1.648,349,1.575,356,2.513,357,1.857,366,1.857,371,1.22,396,1.336,397,1.336,398,1.648,399,3.394,409,2.508,443,2.461,446,2.244,453,2.244,454,2.751,459,1.857,461,1.474,480,1.88,481,2.862,482,2.233,483,2.862,484,2.233,485,4.389,486,2.233,487,2.233,488,2.862,489,2.233,490,2.233,491,2.233,492,1.88,493,2.233,494,2.233,495,3.465,496,2.233,497,1.88,498,1.88,499,3.465,500,2.233,501,1.88,502,2.233,503,2.233]],["title/classes/UpdateProductDto.html",[30,0.103,454,1.984]],["body/classes/UpdateProductDto.html",[3,0.367,4,0.319,5,0.319,11,0.027,21,0.565,29,0.367,30,0.146,36,0.023,37,0.023,187,1.612,223,1.865,225,3.094,229,3.094,249,2.561,318,3.094,454,3.379,504,3.946,505,3.946,506,3.946,507,3.946,508,4.687]],["title/classes/UpdateUserDto.html",[30,0.103,509,1.984]],["body/classes/UpdateUserDto.html",[3,0.369,4,0.32,5,0.32,11,0.027,21,0.567,25,1.508,29,0.369,30,0.147,36,0.023,37,0.023,187,1.62,223,1.874,271,2.573,273,3.474,318,3.108,505,3.965,509,3.388,510,3.965,511,3.474,512,4.709]],["title/classes/User.html",[30,0.103,94,1.062]],["body/classes/User.html",[3,0.29,4,0.251,5,0.251,7,0.502,11,0.027,17,1.107,20,1.562,29,0.29,30,0.115,36,0.02,37,0.02,68,1.304,69,0.934,70,1.71,94,1.558,162,2.73,163,2.971,187,1.272,190,1.674,238,2.164,251,2.73,344,3.589,345,3.589,346,4.263,513,3.113,514,3.697,515,3.697,516,3.697,517,3.697,518,3.697,519,3.697,520,3.697]],["title/controllers/UserController.html",[0,1.227,521,2.19]],["body/controllers/UserController.html",[0,0.831,2,0.831,3,0.176,4,0.153,5,0.153,7,0.305,8,1.175,10,1.836,11,0.028,12,1.484,13,2.255,17,0.875,19,1.589,20,1.375,21,0.523,22,0.464,23,3.126,24,1.344,25,0.72,29,0.176,30,0.07,31,0.964,32,0.895,33,2.968,34,1.588,36,0.014,37,0.014,67,1.588,68,1.107,69,0.686,70,1.28,78,1.484,87,3.695,94,0.72,98,3.058,102,2.255,103,1.659,104,1.659,105,2.255,106,1.484,107,1.484,108,0.895,109,3.276,125,3.046,184,2.074,198,2.255,223,1.359,238,2.281,271,2.855,338,3.45,356,2.521,357,1.866,359,1.659,360,2.521,362,2.521,363,2.521,366,1.228,367,1.659,369,1.659,371,1.228,380,1.659,381,1.659,443,2.043,446,1.484,447,1.893,448,2.876,450,1.893,453,1.484,455,1.893,456,2.876,458,1.893,461,1.484,464,1.893,468,1.893,469,1.893,471,1.893,472,1.893,473,1.893,509,3.347,511,2.521,521,2.255,522,1.893,523,2.248,524,2.248,525,4.132,526,2.248,527,2.248,528,2.248,529,2.248,530,2.248,531,2.257,532,1.893,533,2.248,534,2.248,535,2.248,536,2.248,537,2.248,538,2.248,539,2.248,540,2.248]],["title/modules/UserModule.html",[38,1.141,49,1.984]],["body/modules/UserModule.html",[2,1.83,3,0.297,4,0.258,5,0.258,11,0.028,21,0.606,22,0.783,29,0.297,30,0.118,36,0.02,37,0.02,38,1.702,40,1.627,41,2.122,47,2.662,49,3.833,50,2.484,51,1.905,52,1.905,54,2.703,55,2.959,108,1.51,134,2.504,137,2.504,139,2.504,140,2.504,141,1.905,521,3.635,531,3.391,532,3.194,541,3.194,542,3.794,543,3.194,544,3.794,545,3.794]],["title/injectables/UserService.html",[62,0.921,531,1.813]],["body/injectables/UserService.html",[3,0.14,4,0.122,5,0.122,7,0.243,8,0.983,11,0.028,17,0.913,19,1.522,20,1.367,21,0.499,22,0.369,29,0.14,30,0.056,31,0.767,32,0.712,34,1.534,36,0.012,37,0.012,62,0.793,63,0.829,67,1.635,68,1.243,69,0.742,70,1.319,92,3.617,94,0.915,97,1.07,149,3.242,150,1.07,151,1.07,152,1.623,155,1.435,158,2.109,159,1.07,160,3.006,161,1.95,162,1.435,163,1.95,170,2.597,171,1.32,172,2.357,173,1.95,184,2.047,190,0.983,197,1.32,223,1.421,228,4.204,238,2.227,251,1.435,271,2.228,324,2.407,327,2.634,344,1.887,345,1.887,356,2.228,357,1.562,366,1.562,371,0.977,396,1.07,397,1.07,398,1.32,399,3.009,408,3.433,409,2.109,443,2.135,446,1.887,453,1.887,461,1.181,481,2.407,483,2.407,485,4.002,488,2.407,492,1.506,495,3.006,497,1.506,498,1.506,499,3.006,501,1.506,509,2.438,511,2.109,531,1.562,546,1.506,547,3.57,548,1.789,549,1.789,550,1.789,551,1.789,552,1.789,553,1.789,554,1.789,555,1.789,556,1.506,557,1.506,558,1.789,559,1.789,560,1.789,561,1.789,562,4.078,563,3.57,564,4.078,565,2.858,566,2.858,567,2.858,568,2.858,569,2.858,570,1.789,571,2.407,572,2.858,573,2.858,574,1.789,575,1.789]],["title/coverage.html",[576,3.339]],["body/coverage.html",[0,1.92,1,1.648,5,0.17,6,2.102,11,0.028,26,1.364,30,0.19,36,0.015,37,0.015,62,1.561,64,2.102,69,0.371,76,1.648,77,2.102,83,1.493,94,1.183,111,1.364,113,1.493,117,1.648,131,1.493,148,2.102,152,0.994,155,1.254,173,1.364,186,1.493,188,2.727,189,2.102,191,1.493,193,1.648,224,2.019,229,2.905,249,1.364,250,2.102,271,1.364,272,2.102,273,2.727,306,2.102,329,2.102,335,2.102,336,2.102,343,2.102,349,1.712,354,1.648,355,2.102,370,1.842,373,1.364,388,2.102,396,1.493,397,1.493,420,2.102,433,2.102,441,1.648,442,2.102,454,1.493,459,1.364,480,2.102,504,2.102,509,1.493,510,2.102,513,2.102,521,1.648,522,2.102,531,1.364,546,2.102,576,1.842,577,2.497,578,2.497,579,2.497,580,6.723,581,3.696,582,5.626,583,2.102,584,5.626,585,6.088,586,2.102,587,3.696,588,2.102,589,3.696,590,4.864,591,3.696,592,3.112,593,2.102,594,3.112,595,3.112,596,2.102,597,3.112,598,3.112,599,4.4,600,2.497,601,2.102,602,2.497,603,2.497]],["title/dependencies.html",[41,1.711,604,2.334]],["body/dependencies.html",[11,0.028,22,0.82,25,1.272,30,0.159,36,0.021,37,0.021,41,1.704,108,1.581,136,2.931,141,1.994,158,2.931,217,3.344,222,2.17,317,4.739,395,2.931,506,3.344,507,3.344,605,6.14,606,3.972,607,3.972,608,3.972,609,5.097,610,3.972,611,3.972,612,3.972,613,3.972,614,3.972,615,3.972,616,3.972,617,3.972,618,3.972,619,3.972,620,3.972,621,3.972,622,3.972,623,3.972,624,3.972,625,3.972,626,3.972,627,3.972,628,3.972]],["title/miscellaneous/functions.html",[629,1.83,630,3.359]],["body/miscellaneous/functions.html",[7,0.634,11,0.026,19,1.494,36,0.023,37,0.023,67,1.605,68,1.119,69,0.694,70,1.294,205,3.928,396,3.369,397,2.79,586,3.928,588,5.096,601,4.744,629,3.08,630,3.928,631,4.665,632,4.665,633,4.665,634,6.053]],["title/index.html",[7,0.377,635,2.773,636,2.773]],["body/index.html",[4,0.244,11,0.027,36,0.02,37,0.02,73,3.014,226,1.324,427,3.014,576,2.641,637,3.58,638,3.58,639,4.762,640,3.58,641,3.58,642,3.58,643,3.58,644,3.58,645,5.351,646,3.58,647,3.58,648,3.58,649,3.58,650,6.232,651,3.58,652,3.58,653,6.107,654,3.58,655,3.58,656,4.762,657,3.58,658,3.58,659,3.58,660,3.58,661,4.762,662,4.762,663,3.58,664,3.58,665,3.58,666,4.762,667,4.762,668,3.58,669,3.58,670,3.58,671,3.58,672,3.58,673,3.014,674,3.58,675,3.58,676,3.58,677,3.58,678,3.58,679,3.58,680,3.58,681,3.58,682,3.58,683,3.58,684,3.014,685,3.58,686,3.58,687,3.58,688,3.58,689,3.58,690,3.58,691,3.014]],["title/modules.html",[40,1.941]],["body/modules.html",[11,0.023,36,0.023,37,0.023,39,3.01,40,1.956,45,2.727,46,2.727,47,1.956,48,2.727,49,2.727,673,5.477,692,6.505,693,6.505,694,6.505]],["title/overview.html",[695,3.81]],["body/overview.html",[2,1.186,11,0.027,26,2.763,36,0.018,37,0.018,39,4.318,40,1.375,41,1.896,42,2.7,43,2.7,44,2.7,45,3.746,46,3.622,47,2.719,48,3.622,49,3.622,50,2.219,51,1.61,52,1.61,63,1.486,111,2.763,128,2.7,129,2.7,131,3.025,152,2.41,187,1.103,373,2.763,383,2.7,385,2.7,414,2.7,415,2.7,416,2.7,459,2.763,475,2.7,476,2.7,531,2.763,541,2.7,543,2.7,695,2.7,696,3.207,697,3.207,698,3.207,699,3.207]],["title/properties.html",[190,1.372,604,2.334]],["body/properties.html",[11,0.027,36,0.024,37,0.024,190,1.724,226,1.853,684,4.219,691,4.219,700,5.011,701,5.011,702,5.011]],["title/miscellaneous/variables.html",[629,1.83,703,3.359]],["body/miscellaneous/variables.html",[7,0.34,11,0.028,34,0.861,36,0.015,37,0.015,68,1.247,69,0.551,89,2.909,94,1.559,117,2.444,149,2.023,155,2.445,161,2.66,162,1.859,163,2.023,170,2.408,173,1.368,183,1.847,184,1.257,191,2.214,210,3.252,211,1.847,223,1.474,226,1.369,251,2.445,252,2.909,280,1.847,283,2.108,287,2.108,288,2.108,292,2.108,349,1.716,370,1.847,421,3.71,443,2.214,556,4.74,557,4.74,571,2.108,583,3.118,592,2.108,593,3.118,594,2.108,595,3.71,596,3.118,597,2.108,598,3.71,629,1.652,703,2.108,704,2.503,705,3.703,706,3.703,707,3.703,708,2.503,709,2.503,710,2.503,711,2.503,712,2.503,713,2.503,714,2.503,715,4.87,716,2.503,717,2.503,718,2.503,719,2.503,720,2.503,721,2.503,722,2.503,723,2.503,724,2.503,725,3.703,726,4.407,727,3.703,728,3.703,729,2.503,730,2.503,731,3.703,732,3.703,733,3.703,734,2.503,735,2.503,736,3.703,737,3.703,738,2.503,739,2.503,740,2.503,741,2.503,742,2.503,743,2.503,744,2.503,745,2.503,746,2.503,747,2.503,748,2.503,749,2.503,750,2.503]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":701,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["04f66779",{"_index":239,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["1",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["1.0.0",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":571,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["100ml",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":699,"title":{},"body":{"overview.html":{}}}],["12.34",{"_index":265,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["2",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["24h",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["299.99",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2})@apiproperty({description",{"_index":263,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3.0.2",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["30ml",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["379.00",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["432.00",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c5c",{"_index":241,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["5",{"_index":697,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":696,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":698,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["_count",{"_index":411,"title":{},"body":{"injectables/OrderService.html":{}}}],["a140",{"_index":242,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["abcd@1234",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["acqua",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":674,"title":{},"body":{"index.html":{}}}],["apenas",{"_index":285,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["api",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":275,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":375,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":462,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":533,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":427,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":432,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":644,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":26,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["armani",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["autenticado",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":76,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":45,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":684,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":111,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":675,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":559,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":565,"title":{},"body":{"injectables/UserService.html":{}}}],["baseurl",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["bcfa",{"_index":240,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["bcrypt",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":574,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":570,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belle",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":588,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":694,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":692,"title":{},"body":{"modules.html":{}}}],["building",{"_index":640,"title":{},"body":{"index.html":{}}}],["catch(handleerror",{"_index":409,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["checa",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":30,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":187,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":383,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":384,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":385,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":414,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":415,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":416,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":475,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":477,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":476,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":541,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":542,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":543,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["com",{"_index":197,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["confirmação",{"_index":276,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":274,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":401,"title":{},"body":{"injectables/OrderService.html":{}}}],["const",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":376,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":463,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('user",{"_index":534,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correta",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["coverage",{"_index":576,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":464,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":377,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":444,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createuserdto",{"_index":523,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":483,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":358,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":390,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":344,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":402,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":186,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderdto.products.map((createorderproductdto",{"_index":403,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto",{"_index":193,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createorderproductdto.description",{"_index":406,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.productid",{"_index":404,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.quantity",{"_index":405,"title":{},"body":{"injectables/OrderService.html":{}}}],["createparamdecorator((_",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":249,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":271,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["criar",{"_index":360,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["ctx",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{}}}],["dados",{"_index":341,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":399,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":573,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":346,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["de",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":556,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":471,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":447,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":473,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":446,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["description:\"libre",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["descrição",{"_index":253,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["deve",{"_index":277,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["development",{"_index":652,"title":{},"body":{"index.html":{}}}],["di",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docs",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["dos",{"_index":200,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto",{"_index":485,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":564,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":563,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/create",{"_index":371,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":461,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["e/ou",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":663,"title":{},"body":{"index.html":{}}}],["each",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["eau",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editar",{"_index":456,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["efficient",{"_index":641,"title":{},"body":{"index.html":{}}}],["enableshutdownhooks",{"_index":422,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":424,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":498,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["entities/product.entity",{"_index":493,"title":{},"body":{"injectables/ProductService.html":{}}}],["entities/user.entity",{"_index":560,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":398,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["est",{"_index":211,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["estão",{"_index":203,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["example",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executioncontext",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exibição",{"_index":286,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["existe",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":418,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f234138890f3",{"_index":243,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["false",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["feminino",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":356,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":481,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":488,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":357,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":381,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":366,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["flores",{"_index":255,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["fraca",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":639,"title":{},"body":{"index.html":{}}}],["function",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":630,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gandra",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["gerado",{"_index":337,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":380,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":367,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(baseurl",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":635,"title":{"index.html":{}},"body":{}}],["gi",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["giorgio",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grow",{"_index":670,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":396,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":681,"title":{},"body":{"index.html":{}}}],["homme",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":472,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://avatars.githubusercontent.com/u/7906171",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["https://i.imgur.com/hne75iw.png",{"_index":258,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["https://nestjs.com",{"_index":688,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":238,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@useguards(undefined)@apibearerauth",{"_index":525,"title":{},"body":{"controllers/UserController.html":{}}}],["identifier",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":199,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ignoreexpiration",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":569,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":279,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":251,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["imagem",{"_index":257,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["implements",{"_index":429,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":413,"title":{},"body":{"injectables/OrderService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":425,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informada",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["informadas",{"_index":567,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":649,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":651,"title":{},"body":{"index.html":{}}}],["inválidos",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishashvalid",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":208,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":334,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":267,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":262,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["ispositive",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isstring",{"_index":248,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":231,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":330,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":268,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":256,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":237,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["itens",{"_index":246,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["join",{"_index":677,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":131,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":685,"title":{},"body":{"index.html":{}}}],["la",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lancome",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lancôme",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laurent",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libre",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":691,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":667,"title":{},"body":{"index.html":{}}}],["lilly",{"_index":261,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["lista",{"_index":196,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["listar",{"_index":362,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["logged",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":83,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":113,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["masculino",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":269,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["message",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":629,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":666,"title":{},"body":{"index.html":{}}}],["mode",{"_index":656,"title":{},"body":{"index.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":40,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":680,"title":{},"body":{"index.html":{}}}],["muito",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":686,"title":{},"body":{"index.html":{}}}],["name",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":645,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":690,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":506,"title":{},"body":{"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nickname",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nico",{"_index":291,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["node.js",{"_index":638,"title":{},"body":{"index.html":{}}}],["nome",{"_index":260,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notfoundexception",{"_index":492,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`registro",{"_index":497,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["npm",{"_index":650,"title":{},"body":{"index.html":{}}}],["number",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["não",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["número",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["o",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["obj",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.name",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.nickname",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["object.entries(seed",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(products",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observações",{"_index":232,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["onmoduleinit",{"_index":423,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":668,"title":{},"body":{"index.html":{}}}],["optional",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":224,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["order.controller",{"_index":387,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":372,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":189,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:13",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:23",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":374,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":354,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":46,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":373,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["os",{"_index":198,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":695,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":604,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":234,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateUserDto.html":{}}}],["param",{"_index":369,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parfum",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":501,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":505,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":508,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createuserdto",{"_index":512,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":458,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":468,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":455,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["paulosalvatore",{"_index":331,"title":{},"body":{"classes/LoginDto.html":{}}}],["payload",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.nickname",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedido",{"_index":204,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"controllers/OrderController.html":{}}}],["pedidos",{"_index":364,"title":{},"body":{"controllers/OrderController.html":{}}}],["pelo",{"_index":338,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["perfil",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["perfume",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["perfurme",{"_index":254,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["please",{"_index":678,"title":{},"body":{"index.html":{}}}],["post",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":359,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["presente",{"_index":235,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["preço",{"_index":264,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":252,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["prisma",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.ordercreateinput",{"_index":400,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.product.upsert",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.productcreateinput",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":419,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.user.upsert",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":395,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":421,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":47,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":152,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procura",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["product",{"_index":349,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":479,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":229,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":244,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":247,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:25",{"_index":236,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:27",{"_index":266,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:34",{"_index":259,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":460,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.ts",{"_index":598,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["productcontroller",{"_index":441,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":230,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["production",{"_index":658,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":48,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":191,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["products/product.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["productservice",{"_index":459,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":233,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produtos",{"_index":201,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{}}}],["profile",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":637,"title":{},"body":{"index.html":{}}}],["project",{"_index":669,"title":{},"body":{"index.html":{}}}],["promise",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":190,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["quantidade",{"_index":245,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":192,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["que",{"_index":202,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["read",{"_index":679,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizando",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["realizar",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["recebendo",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["record",{"_index":495,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["remover",{"_index":448,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["repository",{"_index":648,"title":{},"body":{"index.html":{}}}],["request",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response.dto",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":336,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":342,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":340,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":653,"title":{},"body":{"index.html":{}}}],["running",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["saint",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":642,"title":{},"body":{"index.html":{}}}],["se",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["secret",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seeds",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":408,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["senha",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":566,"title":{},"body":{"injectables/UserService.html":{}}}],["ser",{"_index":278,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["server",{"_index":73,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["side",{"_index":643,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":672,"title":{},"body":{"index.html":{}}}],["src/.../01",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handle",{"_index":632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":335,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":329,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":332,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":333,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":370,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":586,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":188,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":343,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:5",{"_index":348,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":352,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":347,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":351,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":350,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":355,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:20",{"_index":361,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:28",{"_index":365,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:36",{"_index":368,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":386,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":388,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:11",{"_index":391,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:55",{"_index":393,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:73",{"_index":394,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":389,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":417,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":420,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:12",{"_index":426,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:8",{"_index":428,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/dto/create",{"_index":250,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dto/update",{"_index":504,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/products/entities/product.entity",{"_index":353,"title":{},"body":{"classes/Order.html":{}}}],["src/products/entities/product.entity.ts",{"_index":433,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/products/entities/product.entity.ts:2",{"_index":436,"title":{},"body":{"classes/Product.html":{}}}],["src/products/entities/product.entity.ts:3",{"_index":438,"title":{},"body":{"classes/Product.html":{}}}],["src/products/entities/product.entity.ts:4",{"_index":435,"title":{},"body":{"classes/Product.html":{}}}],["src/products/entities/product.entity.ts:5",{"_index":439,"title":{},"body":{"classes/Product.html":{}}}],["src/products/entities/product.entity.ts:6",{"_index":437,"title":{},"body":{"classes/Product.html":{}}}],["src/products/entities/product.entity.ts:7",{"_index":434,"title":{},"body":{"classes/Product.html":{}}}],["src/products/entities/product.entity.ts:8",{"_index":440,"title":{},"body":{"classes/Product.html":{}}}],["src/products/product.controller.ts",{"_index":442,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/products/product.controller.ts:30",{"_index":445,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/products/product.controller.ts:38",{"_index":451,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/products/product.controller.ts:46",{"_index":452,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/products/product.controller.ts:54",{"_index":457,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/products/product.controller.ts:63",{"_index":449,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/products/product.module.ts",{"_index":478,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/products/product.service.ts",{"_index":480,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/products/product.service.ts:12",{"_index":487,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/products/product.service.ts:16",{"_index":489,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/products/product.service.ts:26",{"_index":490,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/products/product.service.ts:30",{"_index":484,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/products/product.service.ts:36",{"_index":491,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/products/product.service.ts:49",{"_index":486,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/products/product.service.ts:9",{"_index":482,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/user/dto/create",{"_index":272,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":510,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":513,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":515,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":518,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":517,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":519,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":516,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":514,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":520,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":522,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":524,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":528,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":529,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":530,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":526,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":544,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":546,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:15",{"_index":558,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":548,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:50",{"_index":549,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:70",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:96",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":397,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":654,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":657,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":659,"title":{},"body":{"index.html":{}}}],["started",{"_index":636,"title":{"index.html":{}},"body":{}}],["starter",{"_index":647,"title":{},"body":{"index.html":{}}}],["statements",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":682,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":673,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":693,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["são",{"_index":568,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["tatiana",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["tatianagandra",{"_index":292,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":662,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":665,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":664,"title":{},"body":{"index.html":{}}}],["tests",{"_index":661,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":671,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":430,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":431,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":499,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":378,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":379,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":382,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order",{"_index":407,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":410,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":412,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product",{"_index":502,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.create",{"_index":500,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":503,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":494,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":496,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.user",{"_index":572,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":575,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":561,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto",{"_index":465,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":474,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":466,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":467,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":470,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.userselect",{"_index":562,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":535,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":540,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":537,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":538,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":539,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["todos",{"_index":363,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["toilette",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":339,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["touch",{"_index":683,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["true",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":195,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["twitter",{"_index":689,"title":{},"body":{"index.html":{}}}],["type",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":507,"title":{},"body":{"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":646,"title":{},"body":{"index.html":{}}}],["ui",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":660,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":702,"title":{},"body":{"properties.html":{}}}],["update",{"_index":443,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":469,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":453,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":345,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":454,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":509,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usando",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["useguards",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":94,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":545,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":511,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":273,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":293,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":532,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":521,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":392,"title":{},"body":{"injectables/OrderService.html":{}}}],["usermodule",{"_index":49,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userselect",{"_index":547,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":531,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["usuários",{"_index":536,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários'})@useguards(undefined)@apibearerauth",{"_index":527,"title":{},"body":{"controllers/UserController.html":{}}}],["utilizado",{"_index":290,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["valida",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":194,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":557,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":703,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":700,"title":{},"body":{"properties.html":{}}}],["vie",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visualizar",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["void",{"_index":450,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["watch",{"_index":655,"title":{},"body":{"index.html":{}}}],["website",{"_index":687,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":676,"title":{},"body":{"index.html":{}}}],["yves",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n  getAppStatus(): string {\n    return this.appService.getAppStatus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProductModule } from './products/product.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [ProductModule, PrismaModule, UserModule, OrderModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AppService {\n\tgetAppStatus(baseUrl: string) {\n\t\treturn {\n\t\t\tstatus: \"Server is running! 🚀\",\n\t\t\tdocs: baseUrl + \"/api\",\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { nickname, password } = loginDto;\n\n    // Procura e checa se o user existe, usando o nickname\n    const user = await this.prisma.user.findUnique({ where: { nickname } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    // Valida se a senha informada é correta\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ nickname }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista com os IDs dos produtos que estão no pedido', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Número do perfume que está realizando o pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsPositive, IsUUID, ValidateNested } from 'class-validator';\nimport { CreateOrderProductDto } from './create-order-product.dto';\n\nexport class CreateOrderDto {\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Número do perfume que está realizando o pedido',\n    example: 1,\n  })\n  quantity: number;\n\n  @ValidateNested({\n    each: true,\n  })\n  @Type(() => CreateOrderProductDto)\n  @ApiProperty({\n    description: 'Lista com os IDs dos produtos que estão no pedido',\n    type: [CreateOrderProductDto],\n  })\n  products: CreateOrderProductDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Observações do produto', example: 'Para presente'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do produto', example: '04f66779-bcfa-4c5c-a140-f234138890f3'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quantidade de itens no pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsPositive, IsString, IsUUID } from 'class-validator';\n\nexport class CreateOrderProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do produto',\n    example: '04f66779-bcfa-4c5c-a140-f234138890f3',\n  })\n  productId: string;\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quantidade de itens no pedido',\n    example: 1,\n  })\n  quantity: number;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Observações do produto',\n    example: 'Para presente',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do perfurme', example: 'Flores'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do produto', example: 'https://i.imgur.com/hNE75Iw.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do perfume', example: 'Lilly'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Preço do perfume', example: 12.34})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do perfume',\n    example: 'Lilly',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição do perfurme',\n    example:\n      'Flores',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Preço do perfume',\n    example: 12.34,\n  })\n  price: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do produto',\n    example: 'https://i.imgur.com/hNE75Iw.png',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação da senha deve ser igual a senha', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil do usuário', example: 'https://avatars.githubusercontent.com/u/7906171'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do usuário. Apenas para exibição', example: 'Tatiana Gandra'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome de usuário. Utilizado no login. Deve ser único', example: 'tatianagandra'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl, Matches, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome de usuário. Utilizado no login. Deve ser único',\n    example: 'tatianagandra',\n  })\n  nickname: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do usuário. Apenas para exibição',\n    example: 'Tatiana Gandra',\n  })\n  name: string;\n\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abcd@1234',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação da senha deve ser igual a senha',\n    example: 'Abcd@1234',\n  })\n  confirmPassword: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário',\n    example: 'https://avatars.githubusercontent.com/u/7906171',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { nickname: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { nickname: payload.nickname },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'paulosalvatore'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nickname do usuário',\n    example: 'paulosalvatore',\n  })\n  nickname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from 'src/products/entities/product.entity';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class Order {\n  id?: string;\n  user?: User;\n  createdAt?: Date;\n  updatedAt?: Date;\n  products?: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os pedidos'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um pedido pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderService } from './order.service';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um pedido',\n  })\n  create(@LoggedUser() user: User, @Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(user.id, createOrderDto );\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os pedidos',\n  })\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um pedido pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_imports\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(userId: string, createOrderDto: CreateOrderDto) {\n    const data: Prisma.OrderCreateInput = {\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n      products: {\n        createMany: {\n          data: createOrderDto.products.map((createOrderProductDto) => ({\n            productId: createOrderProductDto.productId,\n            quantity: createOrderProductDto.quantity,\n            description: createOrderProductDto.description,\n          })),\n        },\n      },\n    };\n    return this.prisma.order\n\n      .create({\n        data,\n        select: {\n          id: true,\n          user: {\n            select: {\n              name: true,\n            },\n          },\n          products: {\n            select: {\n              quantity: true,\n              description: true,\n              product: {\n                select: {\n                  name: true,\n                },\n              },\n            },\n          },\n        },\n      })\n      .catch(handleError);\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select: {\n        id: true,\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            products: true,\n          },\n        },\n      },\n    });\n  }\n\n  findOne(id: string) {\n    return this.prisma.order.findUnique({\n      where: { id },\n      include: {\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        products: {\n          select: {\n            product: {\n              select: {\n                id: true,\n                name: true,\n                price: true,\n                image: true,\n                description: true,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService], \n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  \n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/products/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  name: string;\n  description: string;\n  price: number;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/products/product.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/products/product.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtos'})\n                \n            \n\n            \n                \n                    Defined in src/products/product.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/products/product.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/products/product.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um produto',\n  })\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os produtos',\n  })\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um produto pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um produto pelo ID',\n  })\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um produto pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.productService.delete(id);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/products/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/product.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/product.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/products/product.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/product.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/product.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/product.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.product.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.product.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateProductDto): Promise {\n    const data: Product = { ...dto };\n\n    return this.prisma.product.create({ data }).catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateProductDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.product\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.product.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  nickname: string;\n  name: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os usuários'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  delete(@Param('id') id: string) {\n    this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if (dto.password) {\n      if (dto.password != dto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não são iguais.');\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Partial = { ...dto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            products\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/products/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/products/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : ^1.1.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @prisma/client : ^4.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            product   (src/.../02-product.ts)\n                        \n                        \n                            products   (src/.../02-product.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(seed)\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-product.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n\tfor (const obj of Object.values(products)) {\n\t\tawait prisma.product.upsert({\n\t\t\twhere: { name: obj.name },\n\t\t\tupdate: {},\n\t\t\tcreate: {\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.ProductCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{\n\t\tname: \"Lancome\",\n\t\tdescription:\n\t\t\t\"La Vie Est Belle Lancôme - Perfume Feminino - Eau de Parfum - 30ml\",\n\t\tprice: 299.99,\n\t\timage: \"\",\n\t},\n\t{\n\t\tname: \"Libre Yves Saint Laurent\",\n\t\tdescription:\"Libre Yves Saint Laurent Perfume Feminino - Eau de Parfum - 30ml\",\n\t\tprice: 379.00,\n\t\timage: \"\",\n\t},\n\t{\n\t\tname: \"Giorgio Armani\",\n\t\tdescription:\n\t\t\t\"Acqua Di Giò Homme Giorgio Armani - Perfume Masculino - Eau de Toilette - 100ml\",\n\t\tprice: 432.00,\n\t\timage: \"\",\n\t},\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n\tfor (const obj of Object.values(users)) {\n\t\tawait prisma.user.upsert({\n\t\t\twhere: { nickname: obj.nickname },\n\t\t\tupdate: {},\n\t\t\tcreate: {\n\t\t\t\t...obj,\n\t\t\t\tpassword: await bcrypt.hash(obj.password, 10),\n\t\t\t},\n\t\t});\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t{\n\t\tnickname: \"tatianagandra\",\n\t\tname: \"Tatiana Gandra\",\n\t\tpassword: \"Abcd@1234\",\n\t\timage: \"https://avatars.githubusercontent.com/u/7906171\",\n\t},\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
